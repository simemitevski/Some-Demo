<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true">
  <extensions>
    <add assembly="Web" />
  </extensions>
  <!-- see: AspNetUserIdentity and AspNetRequest layout renderer -->
  <variable name="log-header" value="Time: [${date}]${newline}Method: ${aspnet-request-method} ${aspnet-request-url:IncludeHost=true:IncludePort=true:IncludeQueryString=true}${newline}Vers: ${assembly-version}${newline}User: ${aspnet-user-identity}${newline}SsId: ${aspnet-sessionid}${newline}RqId: ${custom-request-id}" />
  <targets>
    <!-- Asynchronous target wrapper allows the logger code to execute more quickly, by queuing messages and processing them in a separate thread. 
    You should wrap targets that spend a non-trivial amount of time in their Write() method with asynchronous target to speed up logging. 
    Because asynchronous logging is quite a common scenario, NLog supports a shorthand notation for wrapping all targets with AsyncWrapper. 
    Just add async="true" to the <targets/> element in the configuration file.-->
    <target name="exceptionLogFile" xsi:type="AsyncWrapper" queueLimit="5000" overflowAction="Discard">
      <target xsi:type="File" encoding="utf-8" fileName="C:/logs/SecurityDemo/Exception/exception_log.txt" layout="${log-header}${newline}${exception:format=tostring}${newline}${newline}" archiveAboveSize="10000000" archiveNumbering="Sequence" maxArchiveFiles="10" />
    </target>
    <target name="infoLogFile" xsi:type="AsyncWrapper" queueLimit="5000" overflowAction="Discard">
      <target xsi:type="File" encoding="utf-8" fileName="C:/logs/SecurityDemo/Info/info_log_${shortdate}.txt" layout="${log-header}${newline}${level:uppercase=true} ${message}" />
    </target>
  </targets>
  <rules>
    <logger name="*" levels="Fatal,Error" writeTo="exceptionLogFile"/>
    <logger name="*" levels="Info" writeTo="infoLogFile">
      <!-- use filters to tell whic messages to log, here i decidet to log only custom messages that starts with 'SystemInfoMessage' -->
      <filters defaultAction='Log'>
        <when condition="not starts-with('${message}', 'SystemInfoMessage')" action="Ignore" />
      </filters>
    </logger>
  </rules>
</nlog>